<Controls:LoadingWindowControlBase x:Class="MixItUp.WPF.Controls.Chat.ChatListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:MixItUp.Base;assembly=MixItUp.Base"
             xmlns:Controls="clr-namespace:MixItUp.WPF.Controls"
             xmlns:ChatControls="clr-namespace:MixItUp.WPF.Controls.Chat"
             xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Controls:LoadingWindowControlBase.Resources>
        <ResourceDictionary>
            <ContextMenu x:Key="ChatListContextMenu">
                <MenuItem x:Name="MessageCopyMenuItem" Header="{x:Static resx:Resources.CopyMessage}" Click="MessageCopyMenuItem_Click" />
                <MenuItem x:Name="MessageDeleteMenuItem" Header="{x:Static resx:Resources.DeleteMessage}" Click="MessageDeleteMenuItem_Click" />
                <MenuItem x:Name="GoToLinkMenuItem" Visibility="Collapsed" Header="{x:Static resx:Resources.GoToLink}" Click="GoToLinkMenuItem_Click" />
                <Separator />
                <MenuItem x:Name="UserInformationMenuItem" Header="{x:Static resx:Resources.UserInfo}" Click="UserInformationMenuItem_Click" />
            </ContextMenu>

        </ResourceDictionary>
    </Controls:LoadingWindowControlBase.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ListView x:Name="ChatList" ItemsSource="{Binding Messages}" Grid.Row="0" ContextMenu="{StaticResource ChatListContextMenu}" SelectionChanged="ChatList_SelectionChanged" AlternationCount="{Binding AlternationCount}" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" ScrollViewer.ScrollChanged="ChatList_ScrollChanged">
                <ListView.Resources>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=ActualWidth}" />
                    </Style>
                </ListView.Resources>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{StaticResource MaterialDesign.Brush.TextBox.HoverBackground}" />
                            </Trigger>
                        </Style.Triggers>

                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ChatControls:ChatMessageControl DataContext="{Binding}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Button x:Name="ChatLockButton" ToolTip="{x:Static resx:Resources.LockChatScrolling}" Margin="0,0,20,0" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" HorizontalAlignment="Right" Grid.Row="0" VerticalAlignment="Bottom" Opacity="0.3" Command="{Binding ScrollingLockCommand}" MouseEnter="ChatLockButton_MouseEnter" MouseLeave="ChatLockButton_MouseLeave">
                <MaterialDesign:PackIcon x:Name="ChatLockButtonIcon" Style="{StaticResource ButtonIcon}" Kind="LockOutline" Foreground="{Binding LockIconColor}" />
            </Button>

            <Grid Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ComboBox Grid.Column="1"
                          ItemsSource="{Binding PlatformOptions}"
                          SelectedItem="{Binding SelectedPlatform, Mode=TwoWay}"
                          Width="40"
                          Margin="0,10,0,0"
                          VerticalAlignment="Center"
                          MaterialDesign:HintAssist.Hint="Platform">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Image Source="{Binding LogoPath}" 
                                       Width="20" 
                                       Height="20"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LogoPath}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding Name}" 
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LogoPath}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                            <Setter Property="ToolTip" Value="{Binding Name}" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <ComboBox Grid.Column="3" ItemsSource="{Binding SendAsOptions, Mode=OneWay}" SelectedIndex="{Binding SendAsIndex}" MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.SendAs}" MinWidth="80" Margin="0,10,0,0" />

                <TextBox x:Name="ChatMessageTextBox" Grid.Column="5" Text="{Binding SendMessageText}" TextChanged="ChatMessageTextBox_TextChanged" PreviewKeyDown="ChatMessageTextBox_PreviewKeyDown" KeyDown="ChatMessageTextBox_KeyDown" MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.ChatMessage}" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

                <Button Grid.Column="7" Command="{Binding SendMessageCommand}" MinWidth="70" Content="{x:Static resx:Resources.Send}"/>
            </Grid>
        </Grid>

        <Canvas>
            <MaterialDesign:PopupBox ToggleContent="" x:Name="UsernameIntellisense" StaysOpen="False">
                <Grid Margin="2,0,2,0" x:Name="UsernameIntellisenseContent">
                    <ListBox x:Name="UsernameIntellisenseListBox" ItemContainerStyle="{StaticResource BorderedListBoxItem}" SelectionMode="Single" PreviewMouseUp="UsernameIntellisenseListBox_PreviewMouseUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ChatControls:ChatUserControl />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>

            <MaterialDesign:PopupBox ToggleContent="" x:Name="EmoticonIntellisense" StaysOpen="False">
                <Grid Margin="2,0,2,0" x:Name="EmoticonIntellisenseContent">
                    <ListBox x:Name="EmoticonIntellisenseListBox" ItemContainerStyle="{StaticResource BorderedListBoxItem}" SelectionMode="Single" PreviewMouseUp="EmoticonIntellisenseListBox_PreviewMouseUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Controls:AdvancedImage DataContext="{Binding}" UseChatFontSize="True" ChatFontSizeScale="2" />
                                    <TextBlock Text="{Binding Name}" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>
        </Canvas>
    </Grid>
</Controls:LoadingWindowControlBase>