<Controls:LoadingWindowControlBase
    x:Class="MixItUp.WPF.Controls.Chat.ChatListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ChatControls="clr-namespace:MixItUp.WPF.Controls.Chat"
    xmlns:Controls="clr-namespace:MixItUp.WPF.Controls"
    xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="clr-namespace:MixItUp.Base;assembly=MixItUp.Base"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Controls:LoadingWindowControlBase.Resources>
        <ResourceDictionary>
            <ContextMenu x:Key="ChatListContextMenu">
                <MenuItem
                    x:Name="MessageCopyMenuItem"
                    Click="MessageCopyMenuItem_Click"
                    Header="{x:Static resx:Resources.CopyMessage}" />
                <MenuItem
                    x:Name="MessageDeleteMenuItem"
                    Click="MessageDeleteMenuItem_Click"
                    Header="{x:Static resx:Resources.DeleteMessage}" />
                <MenuItem
                    x:Name="GoToLinkMenuItem"
                    Click="GoToLinkMenuItem_Click"
                    Header="{x:Static resx:Resources.GoToLink}"
                    Visibility="Collapsed" />
                <Separator />
                <MenuItem
                    x:Name="UserInformationMenuItem"
                    Click="UserInformationMenuItem_Click"
                    Header="{x:Static resx:Resources.UserInfo}" />
            </ContextMenu>

        </ResourceDictionary>
    </Controls:LoadingWindowControlBase.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ListView
                x:Name="ChatList"
                Grid.Row="0"
                HorizontalContentAlignment="Stretch"
                AlternationCount="{Binding AlternationCount}"
                ContextMenu="{StaticResource ChatListContextMenu}"
                ItemsSource="{Binding Messages}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.ScrollChanged="ChatList_ScrollChanged"
                ScrollViewer.VerticalScrollBarVisibility="Hidden"
                SelectionChanged="ChatList_SelectionChanged">
                <ListView.Resources>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollContentPresenter}, Path=ActualWidth}" />
                    </Style>
                </ListView.Resources>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{StaticResource MaterialDesign.Brush.TextBox.HoverBackground}" />
                            </Trigger>
                        </Style.Triggers>

                        <Setter Property="Padding" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ChatControls:ChatMessageControl DataContext="{Binding}" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Button
                x:Name="ChatLockButton"
                Grid.Row="0"
                Margin="0,0,20,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Command="{Binding ScrollingLockCommand}"
                MouseEnter="ChatLockButton_MouseEnter"
                MouseLeave="ChatLockButton_MouseLeave"
                Opacity="0.3"
                Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                ToolTip="{x:Static resx:Resources.LockChatScrolling}">
                <MaterialDesign:PackIcon
                    x:Name="ChatLockButtonIcon"
                    Foreground="{Binding LockIconColor}"
                    Kind="LockOutline"
                    Style="{StaticResource ButtonIcon}" />
            </Button>

            <Grid Grid.Row="1" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <ComboBox
                    Grid.Column="1"
                    Width="40"
                    Margin="0,10,0,0"
                    VerticalAlignment="Center"
                    MaterialDesign:HintAssist.Hint="Platform"
                    ItemsSource="{Binding PlatformOptions}"
                    SelectedItem="{Binding SelectedPlatform, Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Image
                                    Width="20"
                                    Height="20"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Source="{Binding LogoPath, TargetNullValue={x:Null}}">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LogoPath}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="{Binding Name}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LogoPath}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="ComboBoxItem">
                            <Setter Property="ToolTip" Value="{Binding Name}" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>

                <ComboBox
                    Grid.Column="3"
                    MinWidth="80"
                    Margin="0,10,0,0"
                    MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.SendAs}"
                    ItemsSource="{Binding SendAsOptions, Mode=OneWay}"
                    SelectedIndex="{Binding SendAsIndex}" />

                <TextBox
                    x:Name="ChatMessageTextBox"
                    Grid.Column="5"
                    MaterialDesign:HintAssist.Hint="{x:Static resx:Resources.ChatMessage}"
                    KeyDown="ChatMessageTextBox_KeyDown"
                    PreviewKeyDown="ChatMessageTextBox_PreviewKeyDown"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                    Text="{Binding SendMessageText}"
                    TextChanged="ChatMessageTextBox_TextChanged" />

                <Button
                    Grid.Column="7"
                    MinWidth="70"
                    Command="{Binding SendMessageCommand}"
                    Content="{x:Static resx:Resources.Send}" />
            </Grid>
        </Grid>

        <Canvas>
            <MaterialDesign:PopupBox
                x:Name="UsernameIntellisense"
                StaysOpen="False"
                ToggleContent="">
                <Grid x:Name="UsernameIntellisenseContent" Margin="2,0,2,0">
                    <ListBox
                        x:Name="UsernameIntellisenseListBox"
                        ItemContainerStyle="{StaticResource BorderedListBoxItem}"
                        PreviewMouseUp="UsernameIntellisenseListBox_PreviewMouseUp"
                        SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <ChatControls:ChatUserControl />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>

            <MaterialDesign:PopupBox
                x:Name="EmoticonIntellisense"
                StaysOpen="False"
                ToggleContent="">
                <Grid x:Name="EmoticonIntellisenseContent" Margin="2,0,2,0">
                    <ListBox
                        x:Name="EmoticonIntellisenseListBox"
                        ItemContainerStyle="{StaticResource BorderedListBoxItem}"
                        PreviewMouseUp="EmoticonIntellisenseListBox_PreviewMouseUp"
                        SelectionMode="Single">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Controls:AdvancedImage
                                        ChatFontSizeScale="2"
                                        DataContext="{Binding}"
                                        UseChatFontSize="True" />
                                    <TextBlock
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </MaterialDesign:PopupBox>
        </Canvas>
    </Grid>
</Controls:LoadingWindowControlBase>